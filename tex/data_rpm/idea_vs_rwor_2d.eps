%!PS-Adobe-2.0 EPSF-2.0
%%Title: idea_vs_rwor_2d.eps
%%Creator: gnuplot 4.0 patchlevel 0-0vl1
%%CreationDate: Wed Nov  7 21:52:29 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -93 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 280 scalefont setfont
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 840 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-800)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 2772 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 2772 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-700)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 4704 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 4704 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-600)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 840 M
0 63 V
0 3801 R
0 -63 V
stroke
1428 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (3)]
] -121.3 MCshow
grestore
1.000 UL
LTb
1886 840 M
0 31 V
0 3833 R
0 -31 V
2493 840 M
0 31 V
0 3833 R
0 -31 V
2803 840 M
0 31 V
0 3833 R
0 -31 V
2951 840 M
0 63 V
0 3801 R
0 -63 V
stroke
2951 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (4)]
] -121.3 MCshow
grestore
1.000 UL
LTb
3410 840 M
0 31 V
0 3833 R
0 -31 V
4016 840 M
0 31 V
0 3833 R
0 -31 V
4327 840 M
0 31 V
0 3833 R
0 -31 V
4474 840 M
0 63 V
0 3801 R
0 -63 V
stroke
4474 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (5)]
] -121.3 MCshow
grestore
1.000 UL
LTb
4933 840 M
0 31 V
0 3833 R
0 -31 V
5539 840 M
0 31 V
0 3833 R
0 -31 V
5850 840 M
0 31 V
0 3833 R
0 -31 V
5997 840 M
0 63 V
0 3801 R
0 -63 V
stroke
5997 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (6)]
] -121.3 MCshow
grestore
1.000 UL
LTb
6456 840 M
0 31 V
0 3833 R
0 -31 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
LTb
280 2772 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (function value)]
] -93.3 MCshow
grestore
grestore
LTb
4076 140 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (evaluations)]
] -93.3 MCshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT2
LTb
5422 4501 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (RPM)]
] -93.3 MRshow
grestore
LT2
5590 4501 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
3283 3234 M
0 467 V
-31 -467 R
62 0 V
-62 467 R
62 0 V
4593 2146 M
0 611 V
-31 -611 R
62 0 V
-62 611 R
62 0 V
3571 2370 M
0 356 V
-31 -356 R
62 0 V
-62 356 R
62 0 V
4740 1468 M
0 761 V
-31 -761 R
62 0 V
-62 761 R
62 0 V
480 -762 R
0 662 V
-31 -662 R
62 0 V
-62 662 R
62 0 V
3788 2281 M
0 309 V
-31 -309 R
62 0 V
-62 309 R
62 0 V
5009 1585 M
0 535 V
-31 -535 R
62 0 V
-62 535 R
62 0 V
478 -924 R
0 857 V
-31 -857 R
62 0 V
-62 857 R
62 0 V
452 -434 R
0 297 V
-31 -297 R
62 0 V
-62 297 R
62 0 V
-2164 83 R
0 503 V
-31 -503 R
62 0 V
-62 503 R
62 0 V
5015 1453 M
0 605 V
-31 -605 R
62 0 V
-62 605 R
62 0 V
483 -871 R
0 1245 V
5498 1187 M
62 0 V
-62 1245 R
62 0 V
6086 1082 M
0 768 V
-31 -768 R
62 0 V
-62 768 R
62 0 V
257 -623 R
0 602 V
-31 -602 R
62 0 V
-62 602 R
62 0 V
3879 2155 M
0 415 V
-31 -415 R
62 0 V
-62 415 R
62 0 V
5024 1571 M
0 432 V
-31 -432 R
62 0 V
-62 432 R
62 0 V
500 -512 R
0 507 V
-31 -507 R
62 0 V
stroke
5524 1998 M
62 0 V
518 -844 R
0 725 V
-31 -725 R
62 0 V
-62 725 R
62 0 V
262 -600 R
0 830 V
-31 -830 R
62 0 V
-62 830 R
62 0 V
177 -831 R
0 569 V
-31 -569 R
62 0 V
-62 569 R
62 0 V
3861 2017 M
0 552 V
-31 -552 R
62 0 V
-62 552 R
62 0 V
5027 1804 M
0 437 V
-31 -437 R
62 0 V
-62 437 R
62 0 V
473 -594 R
0 341 V
-31 -341 R
62 0 V
-62 341 R
62 0 V
548 -743 R
0 488 V
-31 -488 R
62 0 V
-62 488 R
62 0 V
223 -34 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
201 -669 R
0 614 V
-31 -614 R
62 0 V
-62 614 R
62 0 V
75 -653 R
0 700 V
-31 -700 R
62 0 V
-62 700 R
62 0 V
3283 3468 TriU
4593 2451 TriU
3571 2548 TriU
4740 1849 TriU
5251 1798 TriU
3788 2436 TriU
5009 1852 TriU
5518 1624 TriU
6001 1767 TriU
3868 2250 TriU
5015 1756 TriU
5529 1810 TriU
6086 1466 TriU
6374 1528 TriU
3879 2362 TriU
5024 1787 TriU
5555 1744 TriU
6104 1516 TriU
6397 1694 TriU
6605 1563 TriU
3861 2293 TriU
5027 2022 TriU
5531 1818 TriU
6110 1489 TriU
6364 1821 TriU
6596 1582 TriU
6702 1586 TriU
5989 4501 TriU
2.000 UP
1.000 UL
LT2
LTb
5422 4221 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (ER)]
] -93.3 MRshow
grestore
LT2
5590 4221 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
2762 3145 M
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
4370 2392 M
0 412 V
-31 -412 R
62 0 V
-62 412 R
62 0 V
748 -561 R
0 541 V
-31 -541 R
62 0 V
-62 541 R
62 0 V
6394 1900 M
0 685 V
-31 -685 R
62 0 V
-62 685 R
62 0 V
2640 3344 M
0 355 V
-31 -355 R
62 0 V
-62 355 R
62 0 V
4301 2445 M
0 554 V
-31 -554 R
62 0 V
-62 554 R
62 0 V
796 -915 R
0 510 V
-31 -510 R
62 0 V
-62 510 R
62 0 V
6529 2034 M
0 510 V
-31 -510 R
62 0 V
-62 510 R
62 0 V
2560 3268 M
0 500 V
-31 -500 R
62 0 V
-62 500 R
62 0 V
4742 2654 M
0 514 V
-31 -514 R
62 0 V
-62 514 R
62 0 V
712 -941 R
0 588 V
-31 -588 R
62 0 V
-62 588 R
62 0 V
995 -564 R
0 385 V
-31 -385 R
62 0 V
-62 385 R
62 0 V
2479 3616 M
0 406 V
-31 -406 R
62 0 V
-62 406 R
62 0 V
5705 2609 M
0 434 V
-31 -434 R
62 0 V
-62 434 R
62 0 V
5573 2352 M
0 585 V
-31 -585 R
62 0 V
-62 585 R
62 0 V
964 -529 R
0 287 V
-31 -287 R
62 0 V
-62 287 R
62 0 V
2762 3224 Circle
4370 2598 Circle
5149 2513 Circle
6394 2243 Circle
2640 3522 Circle
4301 2722 Circle
5128 2339 Circle
6529 2289 Circle
2560 3518 Circle
4742 2911 Circle
5485 2521 Circle
6511 2444 Circle
2479 3819 Circle
5705 2826 Circle
5573 2644 Circle
6568 2552 Circle
5989 4221 Circle
2.000 UP
1.000 UL
LT2
LTb
5422 3941 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (FR)]
] -93.3 MRshow
grestore
LT2
5590 3941 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
5804 2102 M
0 606 V
-31 -606 R
62 0 V
-62 606 R
62 0 V
209 -277 R
0 311 V
-31 -311 R
62 0 V
-62 311 R
62 0 V
4975 2406 M
0 477 V
-31 -477 R
62 0 V
-62 477 R
62 0 V
241 -363 R
0 311 V
-31 -311 R
62 0 V
-62 311 R
62 0 V
6636 2508 M
0 582 V
-31 -582 R
62 0 V
-62 582 R
62 0 V
4439 2562 M
0 536 V
-31 -536 R
62 0 V
-62 536 R
62 0 V
279 -407 R
0 363 V
-31 -363 R
62 0 V
-62 363 R
62 0 V
560 -396 R
0 669 V
-31 -669 R
62 0 V
-62 669 R
62 0 V
485 -465 R
0 361 V
-31 -361 R
62 0 V
-62 361 R
62 0 V
3184 2938 M
0 410 V
-31 -410 R
62 0 V
-62 410 R
62 0 V
270 -165 R
0 553 V
-31 -553 R
62 0 V
-62 553 R
62 0 V
465 105 R
0 482 V
-31 -482 R
62 0 V
-62 482 R
62 0 V
5804 2405 CircleF
6044 2587 CircleF
4975 2644 CircleF
5247 2675 CircleF
6636 2799 CircleF
4439 2830 CircleF
4749 2872 CircleF
5340 2992 CircleF
5856 3042 CircleF
3184 3143 CircleF
3485 3460 CircleF
3981 4082 CircleF
5989 3941 CircleF
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
2.000 UP
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 840 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-800)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 2772 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 2772 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-700)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 4704 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 4704 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-600)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 840 M
0 63 V
0 3801 R
0 -63 V
stroke
1428 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (3)]
] -121.3 MCshow
grestore
1.000 UL
LTb
1886 840 M
0 31 V
0 3833 R
0 -31 V
2493 840 M
0 31 V
0 3833 R
0 -31 V
2803 840 M
0 31 V
0 3833 R
0 -31 V
2951 840 M
0 63 V
0 3801 R
0 -63 V
stroke
2951 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (4)]
] -121.3 MCshow
grestore
1.000 UL
LTb
3410 840 M
0 31 V
0 3833 R
0 -31 V
4016 840 M
0 31 V
0 3833 R
0 -31 V
4327 840 M
0 31 V
0 3833 R
0 -31 V
4474 840 M
0 63 V
0 3801 R
0 -63 V
stroke
4474 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (5)]
] -121.3 MCshow
grestore
1.000 UL
LTb
4933 840 M
0 31 V
0 3833 R
0 -31 V
5539 840 M
0 31 V
0 3833 R
0 -31 V
5850 840 M
0 31 V
0 3833 R
0 -31 V
5997 840 M
0 63 V
0 3801 R
0 -63 V
stroke
5997 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (6)]
] -121.3 MCshow
grestore
1.000 UL
LTb
6456 840 M
0 31 V
0 3833 R
0 -31 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
LTb
280 2772 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (function value)]
] -93.3 MCshow
grestore
grestore
LTb
4076 140 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (evaluations)]
] -93.3 MCshow
grestore
2.000 UP
1.000 UL
LT0
1428 2127 M
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
