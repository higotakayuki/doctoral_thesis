%!PS-Adobe-2.0 EPSF-2.0
%%Title: idea_vs_rwor_1d.eps
%%Creator: gnuplot 4.0 patchlevel 0-0vl1
%%CreationDate: Wed Nov  7 21:52:10 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -93 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 280 scalefont setfont
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 840 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-400)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 4704 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 4704 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-300)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 840 M
0 63 V
0 3801 R
0 -63 V
stroke
1428 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (3)]
] -121.3 MCshow
grestore
1.000 UL
LTb
1886 840 M
0 31 V
0 3833 R
0 -31 V
2493 840 M
0 31 V
0 3833 R
0 -31 V
2803 840 M
0 31 V
0 3833 R
0 -31 V
2951 840 M
0 63 V
0 3801 R
0 -63 V
stroke
2951 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (4)]
] -121.3 MCshow
grestore
1.000 UL
LTb
3410 840 M
0 31 V
0 3833 R
0 -31 V
4016 840 M
0 31 V
0 3833 R
0 -31 V
4327 840 M
0 31 V
0 3833 R
0 -31 V
4474 840 M
0 63 V
0 3801 R
0 -63 V
stroke
4474 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (5)]
] -121.3 MCshow
grestore
1.000 UL
LTb
4933 840 M
0 31 V
0 3833 R
0 -31 V
5539 840 M
0 31 V
0 3833 R
0 -31 V
5850 840 M
0 31 V
0 3833 R
0 -31 V
5997 840 M
0 63 V
0 3801 R
0 -63 V
stroke
5997 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (6)]
] -121.3 MCshow
grestore
1.000 UL
LTb
6456 840 M
0 31 V
0 3833 R
0 -31 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
LTb
280 2772 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (function value)]
] -93.3 MCshow
grestore
grestore
LTb
4076 140 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (evaluations)]
] -93.3 MCshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT2
LTb
5422 4501 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (RPM)]
] -93.3 MRshow
grestore
LT2
5590 4501 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
3133 2485 M
0 219 V
-31 -219 R
62 0 V
-62 219 R
62 0 V
333 -713 R
0 310 V
-31 -310 R
62 0 V
-62 310 R
62 0 V
196 -419 R
0 312 V
-31 -312 R
62 0 V
-62 312 R
62 0 V
-38 -150 R
0 281 V
-31 -281 R
62 0 V
-62 281 R
62 0 V
-19 -337 R
0 301 V
-31 -301 R
62 0 V
-62 301 R
62 0 V
-17 -313 R
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
658 -353 R
0 381 V
-31 -381 R
62 0 V
-62 381 R
62 0 V
142 -665 R
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
207 -575 R
0 1082 V
4812 1219 M
62 0 V
-62 1082 R
62 0 V
9 -743 R
0 449 V
-31 -449 R
62 0 V
-62 449 R
62 0 V
13 -196 R
0 284 V
-31 -284 R
62 0 V
-62 284 R
62 0 V
15 -513 R
0 340 V
-31 -340 R
62 0 V
-62 340 R
62 0 V
119 -483 R
0 347 V
-31 -347 R
62 0 V
-62 347 R
62 0 V
213 -346 R
0 330 V
-31 -330 R
62 0 V
-62 330 R
62 0 V
-32 -205 R
0 467 V
-31 -467 R
62 0 V
-62 467 R
62 0 V
6 -444 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
-1 -320 R
0 250 V
-31 -250 R
62 0 V
stroke
5402 1769 M
62 0 V
370 -161 R
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
35 -362 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
-34 -273 R
0 217 V
-31 -217 R
62 0 V
-62 217 R
62 0 V
-23 -197 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
276 -336 R
0 323 V
-31 -323 R
62 0 V
-62 323 R
62 0 V
-62 -137 R
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
-23 -308 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
193 -420 R
0 303 V
-31 -303 R
62 0 V
-62 303 R
62 0 V
-34 -296 R
0 350 V
-31 -350 R
62 0 V
-62 350 R
62 0 V
126 -320 R
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
3133 2594 TriU
3497 2146 TriU
3724 2038 TriU
3717 2185 TriU
3729 2138 TriU
3743 2092 TriU
4432 2046 TriU
4605 1682 TriU
4843 1760 TriU
4883 1783 TriU
4927 1953 TriU
4973 1752 TriU
5123 1613 TriU
5367 1605 TriU
5366 1798 TriU
5403 1713 TriU
5433 1644 TriU
5834 1744 TriU
5900 1651 TriU
5897 1621 TriU
5905 1628 TriU
6212 1551 TriU
6181 1690 TriU
6189 1644 TriU
6413 1520 TriU
6410 1551 TriU
6567 1520 TriU
5989 4501 TriU
2.000 UP
1.000 UL
LT2
LTb
5422 4221 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (ER)]
] -93.3 MRshow
grestore
LT2
5590 4221 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
2789 2473 M
0 304 V
-31 -304 R
62 0 V
-62 304 R
62 0 V
4709 1998 M
0 497 V
-31 -497 R
62 0 V
-62 497 R
62 0 V
5921 1949 M
0 394 V
-31 -394 R
62 0 V
-62 394 R
62 0 V
2742 2463 M
0 309 V
-31 -309 R
62 0 V
-62 309 R
62 0 V
5037 2110 M
0 381 V
-31 -381 R
62 0 V
-62 381 R
62 0 V
6304 1947 M
0 367 V
-31 -367 R
62 0 V
-62 367 R
62 0 V
367 -711 R
0 3101 V
6671 1603 M
62 0 V
-62 3101 R
62 0 V
2691 2693 M
0 344 V
-31 -344 R
62 0 V
-62 344 R
62 0 V
5912 2165 M
0 272 V
-31 -272 R
62 0 V
-62 272 R
62 0 V
528 -294 R
0 269 V
-31 -269 R
62 0 V
-62 269 R
62 0 V
200 -543 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
2399 2954 M
0 394 V
-31 -394 R
62 0 V
-62 394 R
62 0 V
6274 2191 M
0 358 V
-31 -358 R
62 0 V
-62 358 R
62 0 V
24 -410 R
0 184 V
-31 -184 R
62 0 V
-62 184 R
62 0 V
342 -352 R
0 396 V
-31 -396 R
62 0 V
-62 396 R
62 0 V
2789 2625 Circle
4709 2246 Circle
5921 2146 Circle
2742 2617 Circle
5037 2301 Circle
6304 2131 Circle
6702 3367 Circle
2691 2865 Circle
5912 2301 Circle
6471 2277 Circle
6702 2015 Circle
2399 3151 Circle
6274 2370 Circle
6329 2231 Circle
6702 2169 Circle
5989 4221 Circle
2.000 UP
1.000 UL
LT2
LTb
5422 3941 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (FR)]
] -93.3 MRshow
grestore
LT2
5590 3941 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
6069 2045 M
0 310 V
-31 -310 R
62 0 V
-62 310 R
62 0 V
5840 2102 M
0 227 V
-31 -227 R
62 0 V
-62 227 R
62 0 V
5021 1986 M
0 505 V
-31 -505 R
62 0 V
-62 505 R
62 0 V
6400 2023 M
0 447 V
-31 -447 R
62 0 V
-62 447 R
62 0 V
163 -347 R
0 324 V
-31 -324 R
62 0 V
-62 324 R
62 0 V
-88 -240 R
0 295 V
-31 -295 R
62 0 V
-62 295 R
62 0 V
5218 2226 M
0 335 V
-31 -335 R
62 0 V
-62 335 R
62 0 V
4729 2256 M
0 383 V
-31 -383 R
62 0 V
-62 383 R
62 0 V
4445 2312 M
0 302 V
-31 -302 R
62 0 V
-62 302 R
62 0 V
5726 2347 M
0 325 V
-31 -325 R
62 0 V
-62 325 R
62 0 V
3160 2359 M
0 517 V
-31 -517 R
62 0 V
-62 517 R
62 0 V
5219 2456 M
0 416 V
-31 -416 R
62 0 V
-62 416 R
62 0 V
3426 2656 M
0 340 V
-31 -340 R
62 0 V
-62 340 R
62 0 V
492 18 R
0 428 V
-31 -428 R
62 0 V
-62 428 R
62 0 V
2722 190 R
0 413 V
-31 -413 R
62 0 V
-62 413 R
62 0 V
6069 2200 CircleF
5840 2216 CircleF
5021 2239 CircleF
6400 2246 CircleF
6594 2285 CircleF
6537 2355 CircleF
5218 2393 CircleF
4729 2447 CircleF
4445 2463 CircleF
5726 2509 CircleF
3160 2617 CircleF
5219 2664 CircleF
3426 2826 CircleF
3949 3228 CircleF
6702 3838 CircleF
5989 3941 CircleF
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
2.000 UP
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 840 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-400)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 4704 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 4704 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-300)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 840 M
0 63 V
0 3801 R
0 -63 V
stroke
1428 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (3)]
] -121.3 MCshow
grestore
1.000 UL
LTb
1886 840 M
0 31 V
0 3833 R
0 -31 V
2493 840 M
0 31 V
0 3833 R
0 -31 V
2803 840 M
0 31 V
0 3833 R
0 -31 V
2951 840 M
0 63 V
0 3801 R
0 -63 V
stroke
2951 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (4)]
] -121.3 MCshow
grestore
1.000 UL
LTb
3410 840 M
0 31 V
0 3833 R
0 -31 V
4016 840 M
0 31 V
0 3833 R
0 -31 V
4327 840 M
0 31 V
0 3833 R
0 -31 V
4474 840 M
0 63 V
0 3801 R
0 -63 V
stroke
4474 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (5)]
] -121.3 MCshow
grestore
1.000 UL
LTb
4933 840 M
0 31 V
0 3833 R
0 -31 V
5539 840 M
0 31 V
0 3833 R
0 -31 V
5850 840 M
0 31 V
0 3833 R
0 -31 V
5997 840 M
0 63 V
0 3801 R
0 -63 V
stroke
5997 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (6)]
] -121.3 MCshow
grestore
1.000 UL
LTb
6456 840 M
0 31 V
0 3833 R
0 -31 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
LTb
280 2772 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (function value)]
] -93.3 MCshow
grestore
grestore
LTb
4076 140 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (evaluations)]
] -93.3 MCshow
grestore
2.000 UP
1.000 UL
LT0
1428 1991 M
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
54 0 V
53 0 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
