%!PS-Adobe-2.0 EPSF-2.0
%%Title: annealing_graph.eps
%%Creator: gnuplot 4.0 patchlevel 0-0vl1
%%CreationDate: Wed Sep 12 19:28:52 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -106 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1632 960 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 960 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-400)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1632 1884 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 1884 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-350)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1632 2808 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 2808 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-300)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1632 3732 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 3732 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-250)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1632 4656 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 4656 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-200)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1632 960 M
0 63 V
0 3633 R
0 -63 V
stroke
1632 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 ( 0)]
] -106.7 MCshow
grestore
1.000 UL
LTb
3306 960 M
0 63 V
0 3633 R
0 -63 V
stroke
3306 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 ( 5000)]
] -106.7 MCshow
grestore
1.000 UL
LTb
4981 960 M
0 63 V
0 3633 R
0 -63 V
stroke
4981 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 ( 10000)]
] -106.7 MCshow
grestore
1.000 UL
LTb
6656 960 M
0 63 V
0 3633 R
0 -63 V
stroke
6656 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 ( 15000)]
] -106.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1632 960 M
5024 0 V
0 3696 V
-5024 0 V
0 -3696 V
LTb
320 2808 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (function value)]
] -106.7 MCshow
grestore
grestore
LTb
4144 160 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (evaluations)]
] -106.7 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1647 4527 Pls
1655 4434 Pls
1662 4379 Pls
1678 4582 Pls
1686 4508 Pls
1693 4619 Pls
1716 4545 Pls
1724 4601 Pls
1732 4231 Pls
1740 4176 Pls
1755 4379 Pls
1763 4342 Pls
1770 4397 Pls
1778 4397 Pls
1786 4453 Pls
1793 4619 Pls
1801 3991 Pls
1809 4305 Pls
1817 4416 Pls
1824 4194 Pls
1832 4194 Pls
1840 4434 Pls
1847 4212 Pls
1855 4490 Pls
1863 4564 Pls
1870 4231 Pls
1878 4453 Pls
1886 4249 Pls
1894 4582 Pls
1901 4268 Pls
1909 4360 Pls
1917 4305 Pls
1924 4342 Pls
1932 3954 Pls
1940 4638 Pls
1948 4434 Pls
1955 4139 Pls
1963 4231 Pls
1971 4360 Pls
1978 3972 Pls
1986 4231 Pls
1994 4249 Pls
2001 3898 Pls
2009 4176 Pls
2017 3935 Pls
2025 3861 Pls
2032 4286 Pls
2040 4434 Pls
2048 4342 Pls
2055 4065 Pls
2063 4194 Pls
2071 3917 Pls
2078 4083 Pls
2086 4157 Pls
2094 4157 Pls
2102 4194 Pls
2109 4046 Pls
2117 4286 Pls
2125 3695 Pls
2132 3861 Pls
2140 4083 Pls
2148 3880 Pls
2156 4046 Pls
2163 3714 Pls
2171 4028 Pls
2179 3843 Pls
2186 3658 Pls
2194 3806 Pls
2202 4028 Pls
2209 3750 Pls
2217 4102 Pls
2225 3603 Pls
2233 3972 Pls
2240 3898 Pls
2248 4028 Pls
2256 3714 Pls
2263 3843 Pls
2271 4046 Pls
2279 3566 Pls
2287 3677 Pls
2294 3750 Pls
2302 3824 Pls
2310 3806 Pls
2317 3714 Pls
2325 3824 Pls
2333 3418 Pls
2340 3677 Pls
2348 3861 Pls
2356 4065 Pls
2364 3769 Pls
2371 3750 Pls
2379 3714 Pls
2387 3917 Pls
2394 3695 Pls
2402 3806 Pls
2410 3529 Pls
2417 3880 Pls
2425 3806 Pls
2433 3806 Pls
2441 3714 Pls
2448 3566 Pls
2456 3436 Pls
2464 3288 Pls
2471 3621 Pls
2479 3510 Pls
2487 3695 Pls
2495 3252 Pls
2502 3603 Pls
2510 3233 Pls
2518 3362 Pls
2525 3381 Pls
2533 3307 Pls
2541 3695 Pls
2548 3122 Pls
2556 3547 Pls
2564 3584 Pls
2572 3399 Pls
2579 3640 Pls
2587 3455 Pls
2595 3307 Pls
2602 3566 Pls
2610 3529 Pls
2618 3252 Pls
2625 3547 Pls
2633 3436 Pls
2641 3436 Pls
2649 3215 Pls
2656 3141 Pls
2664 3418 Pls
2672 3381 Pls
2679 3640 Pls
2687 3566 Pls
2695 3381 Pls
2703 2956 Pls
2710 3288 Pls
2718 3640 Pls
2726 3436 Pls
2733 3270 Pls
2741 3159 Pls
2749 3252 Pls
2756 3566 Pls
2764 3270 Pls
2772 3381 Pls
2780 3067 Pls
2787 3178 Pls
2795 3067 Pls
2803 2919 Pls
2810 3141 Pls
2818 3196 Pls
2826 3085 Pls
2833 3011 Pls
2841 3196 Pls
2849 3399 Pls
2857 3215 Pls
2864 3141 Pls
2872 3233 Pls
2880 3104 Pls
2887 3196 Pls
2895 2900 Pls
2903 3344 Pls
2911 3159 Pls
2918 3030 Pls
2926 3067 Pls
2934 2974 Pls
2941 3104 Pls
2949 3085 Pls
2957 3196 Pls
2964 3122 Pls
2972 2900 Pls
2980 2549 Pls
2988 2956 Pls
2995 2771 Pls
3003 3011 Pls
3011 2882 Pls
3018 2919 Pls
3026 2753 Pls
3034 3122 Pls
3041 2790 Pls
3049 2623 Pls
3057 2882 Pls
3065 2790 Pls
3072 2549 Pls
3080 2993 Pls
3088 2863 Pls
3095 2863 Pls
3103 2919 Pls
3111 2494 Pls
3119 2882 Pls
3126 2660 Pls
3134 2863 Pls
3142 3011 Pls
3149 2568 Pls
3157 2974 Pls
3165 2845 Pls
3172 2753 Pls
3180 2734 Pls
3188 2937 Pls
3196 2937 Pls
3203 2956 Pls
3211 2716 Pls
3219 2623 Pls
3226 2882 Pls
3234 2623 Pls
3242 2679 Pls
3250 2531 Pls
3257 2549 Pls
3265 2531 Pls
3273 2605 Pls
3280 2716 Pls
3288 2642 Pls
3296 2420 Pls
3303 2734 Pls
3311 2494 Pls
3319 2549 Pls
3327 2716 Pls
3334 2660 Pls
3342 2401 Pls
3350 2697 Pls
3357 2605 Pls
3365 2383 Pls
3373 2586 Pls
3380 2475 Pls
3388 2568 Pls
3396 2642 Pls
3404 2549 Pls
3411 2291 Pls
3419 2568 Pls
3427 2568 Pls
3434 2642 Pls
3442 2346 Pls
3450 2457 Pls
3458 2494 Pls
3465 2457 Pls
3473 2235 Pls
3481 2457 Pls
3488 2217 Pls
3496 2494 Pls
3504 2475 Pls
3511 2438 Pls
3519 2586 Pls
3527 2309 Pls
3535 2383 Pls
3542 2531 Pls
3550 2124 Pls
3558 2457 Pls
3565 2438 Pls
3573 2291 Pls
3581 2364 Pls
3588 2291 Pls
3596 2272 Pls
3604 2309 Pls
3612 2457 Pls
3619 2272 Pls
3627 2420 Pls
3635 2291 Pls
3642 2328 Pls
3650 1958 Pls
3658 2069 Pls
3666 2291 Pls
3673 2198 Pls
3681 2050 Pls
3689 2346 Pls
3696 2291 Pls
3704 2254 Pls
3712 2143 Pls
3719 2512 Pls
3727 2291 Pls
3735 2180 Pls
3743 2235 Pls
3750 2457 Pls
3758 2364 Pls
3766 2050 Pls
3773 2180 Pls
3781 2254 Pls
3789 2364 Pls
3796 2346 Pls
3804 1995 Pls
3812 2346 Pls
3820 2032 Pls
3827 2291 Pls
3835 2124 Pls
3843 2124 Pls
3850 2013 Pls
3858 1976 Pls
3866 2217 Pls
3874 2050 Pls
3881 2143 Pls
3889 1995 Pls
3897 2069 Pls
3904 2161 Pls
3912 2143 Pls
3920 2143 Pls
3927 1810 Pls
3935 2180 Pls
3943 1810 Pls
3951 2013 Pls
3958 2069 Pls
3966 2032 Pls
3974 2106 Pls
3981 2106 Pls
3989 1902 Pls
3997 2087 Pls
4004 2032 Pls
4012 2050 Pls
4020 1810 Pls
4028 1847 Pls
4035 1921 Pls
4043 1939 Pls
4051 1829 Pls
4058 1976 Pls
4066 1792 Pls
4074 1921 Pls
4082 1976 Pls
4089 1736 Pls
4097 1718 Pls
4105 1884 Pls
4112 1810 Pls
4120 1958 Pls
4128 1829 Pls
4135 1921 Pls
4143 1921 Pls
4151 1755 Pls
4159 1847 Pls
4166 1792 Pls
4174 1662 Pls
4182 1958 Pls
4189 1773 Pls
4197 1736 Pls
4205 1755 Pls
4212 1829 Pls
4220 1699 Pls
4228 2013 Pls
4236 1681 Pls
4243 1902 Pls
4251 1792 Pls
4259 1847 Pls
4266 1588 Pls
4274 1570 Pls
4282 1662 Pls
4290 1810 Pls
4297 1570 Pls
4305 1662 Pls
4313 1718 Pls
4320 1644 Pls
4328 1681 Pls
4336 1662 Pls
4343 1792 Pls
4351 1699 Pls
4359 1588 Pls
4367 1662 Pls
4374 1496 Pls
4382 1514 Pls
4390 1681 Pls
4397 1699 Pls
4405 1736 Pls
4413 1847 Pls
4421 1625 Pls
4428 1440 Pls
4436 1588 Pls
4444 1681 Pls
4451 1533 Pls
4459 1625 Pls
4467 1718 Pls
4474 1514 Pls
4482 1496 Pls
4490 1551 Pls
4498 1551 Pls
4505 1551 Pls
4513 1533 Pls
4521 1477 Pls
4528 1588 Pls
4536 1551 Pls
4544 1440 Pls
4551 1459 Pls
4559 1496 Pls
4567 1551 Pls
4575 1681 Pls
4582 1551 Pls
4590 1570 Pls
4598 1496 Pls
4605 1348 Pls
4613 1533 Pls
4621 1514 Pls
4629 1422 Pls
4636 1422 Pls
4644 1348 Pls
4652 1422 Pls
4659 1385 Pls
4667 1440 Pls
4675 1422 Pls
4682 1404 Pls
4690 1422 Pls
4698 1385 Pls
4706 1440 Pls
4713 1311 Pls
4721 1496 Pls
4729 1440 Pls
4736 1570 Pls
4744 1422 Pls
4752 1385 Pls
4759 1330 Pls
4767 1348 Pls
4775 1385 Pls
4783 1311 Pls
4790 1422 Pls
4798 1404 Pls
4806 1440 Pls
4813 1311 Pls
4821 1330 Pls
4829 1311 Pls
4837 1459 Pls
4844 1496 Pls
4852 1404 Pls
4860 1459 Pls
4867 1200 Pls
4875 1293 Pls
4883 1237 Pls
4890 1459 Pls
4898 1367 Pls
4906 1459 Pls
4914 1330 Pls
4921 1237 Pls
4929 1293 Pls
4937 1348 Pls
4944 1330 Pls
4952 1256 Pls
4960 1477 Pls
4967 1330 Pls
4975 1348 Pls
4983 1219 Pls
4991 1237 Pls
4998 1293 Pls
5006 1293 Pls
5014 1367 Pls
5021 1385 Pls
5029 1274 Pls
5037 1237 Pls
5045 1404 Pls
5052 1237 Pls
5060 1367 Pls
5068 1237 Pls
5075 1274 Pls
5083 1274 Pls
5091 1182 Pls
5098 1237 Pls
5106 1219 Pls
5114 1237 Pls
5122 1274 Pls
5129 1108 Pls
5137 1237 Pls
5145 1237 Pls
5152 1200 Pls
5160 1256 Pls
5168 1163 Pls
5175 1182 Pls
5183 1237 Pls
5191 1311 Pls
5199 1163 Pls
5206 1182 Pls
5214 1163 Pls
5222 1200 Pls
5229 1182 Pls
5237 1126 Pls
5245 1200 Pls
5253 1145 Pls
5260 1163 Pls
5268 1237 Pls
5276 1200 Pls
5283 1182 Pls
5291 1145 Pls
5299 1219 Pls
5306 1126 Pls
5314 1163 Pls
5322 1145 Pls
5330 1108 Pls
5337 1200 Pls
5345 1089 Pls
5353 1108 Pls
5360 1126 Pls
5368 1108 Pls
5376 1071 Pls
5384 1089 Pls
5391 1182 Pls
5399 1052 Pls
5407 1200 Pls
5414 1200 Pls
5422 1034 Pls
5430 1145 Pls
5437 1071 Pls
5445 1034 Pls
5453 1089 Pls
5461 1034 Pls
5468 997 Pls
5476 1182 Pls
5484 1089 Pls
5491 1052 Pls
5499 1089 Pls
5507 1034 Pls
5514 1182 Pls
5522 1034 Pls
5530 1089 Pls
5538 1052 Pls
5545 1034 Pls
5553 960 Pls
5561 1052 Pls
5568 1052 Pls
5576 1071 Pls
5584 1052 Pls
5592 1052 Pls
5599 1052 Pls
5607 1015 Pls
5615 1034 Pls
5622 1034 Pls
5630 997 Pls
5638 1015 Pls
5645 997 Pls
5653 1071 Pls
5661 1015 Pls
5669 1052 Pls
5676 1052 Pls
5684 997 Pls
5692 997 Pls
5699 1052 Pls
5707 1034 Pls
5715 1015 Pls
5722 997 Pls
5730 1015 Pls
5738 960 Pls
5746 1015 Pls
5753 1015 Pls
5761 960 Pls
5769 997 Pls
5776 1015 Pls
5784 1015 Pls
5792 960 Pls
5800 997 Pls
5807 997 Pls
5815 960 Pls
5823 1015 Pls
5830 978 Pls
5838 978 Pls
5846 960 Pls
5853 978 Pls
5861 978 Pls
5869 978 Pls
5877 997 Pls
5884 978 Pls
5892 978 Pls
5900 978 Pls
5907 960 Pls
5915 960 Pls
5923 960 Pls
5930 997 Pls
5938 978 Pls
5946 978 Pls
5954 960 Pls
5961 960 Pls
5969 960 Pls
5977 997 Pls
5984 960 Pls
5992 960 Pls
6000 978 Pls
6008 960 Pls
6015 960 Pls
6023 960 Pls
6031 960 Pls
6038 960 Pls
6046 960 Pls
6054 978 Pls
6061 960 Pls
6069 978 Pls
6077 978 Pls
6085 978 Pls
6092 960 Pls
6100 960 Pls
6108 960 Pls
6115 960 Pls
6123 960 Pls
6131 960 Pls
6138 960 Pls
6146 960 Pls
6154 960 Pls
6162 960 Pls
6169 960 Pls
6177 960 Pls
6185 960 Pls
6192 960 Pls
6200 960 Pls
6208 960 Pls
6216 960 Pls
6223 960 Pls
6231 960 Pls
6239 960 Pls
6246 960 Pls
6254 960 Pls
1.000 UL
LTb
1632 960 M
5024 0 V
0 3696 V
-5024 0 V
0 -3696 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
