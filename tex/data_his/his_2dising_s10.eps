%!PS-Adobe-2.0 EPSF-2.0
%%Title: his_2dising_s10.eps
%%Creator: gnuplot 4.0 patchlevel 0-0vl1
%%CreationDate: Tue Sep 18 22:13:33 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -106 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1632 960 M
5024 0 V
1.000 UL
LTb
1632 960 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 960 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-800)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1632 1884 M
5024 0 V
1.000 UL
LTb
1632 1884 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 1884 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-700)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1632 2808 M
5024 0 V
1.000 UL
LTb
1632 2808 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 2808 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-600)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1632 3732 M
2786 0 V
2046 0 R
192 0 V
1.000 UL
LTb
1632 3732 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 3732 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-500)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1632 4656 M
5024 0 V
1.000 UL
LTb
1632 4656 M
63 0 V
4961 0 R
-63 0 V
stroke
1440 4656 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (-400)]
] -106.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1697 960 M
0 3696 V
1.000 UL
LTb
1697 960 M
0 63 V
0 3633 R
0 -63 V
stroke
1697 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (3)]
] -138.7 MCshow
grestore
1.000 UL
LTb
2127 960 M
0 31 V
0 3665 R
0 -31 V
2694 960 M
0 31 V
0 3665 R
0 -31 V
2985 960 M
0 31 V
0 3665 R
0 -31 V
1.000 UL
LTa
3123 960 M
0 3696 V
1.000 UL
LTb
3123 960 M
0 63 V
0 3633 R
0 -63 V
stroke
3123 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (4)]
] -138.7 MCshow
grestore
1.000 UL
LTb
3553 960 M
0 31 V
0 3665 R
0 -31 V
4120 960 M
0 31 V
0 3665 R
0 -31 V
4411 960 M
0 31 V
0 3665 R
0 -31 V
1.000 UL
LTa
4549 960 M
0 2033 V
0 1600 R
0 63 V
1.000 UL
LTb
4549 960 M
0 63 V
0 3633 R
0 -63 V
stroke
4549 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (5)]
] -138.7 MCshow
grestore
1.000 UL
LTb
4979 960 M
0 31 V
0 3665 R
0 -31 V
5546 960 M
0 31 V
0 3665 R
0 -31 V
5837 960 M
0 31 V
0 3665 R
0 -31 V
1.000 UL
LTa
5976 960 M
0 2033 V
0 1600 R
0 63 V
1.000 UL
LTb
5976 960 M
0 63 V
0 3633 R
0 -63 V
stroke
5976 640 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (10)]
[(Helvetica) 256.0 160.0 true true 0 (6)]
] -138.7 MCshow
grestore
1.000 UL
LTb
6405 960 M
0 31 V
0 3665 R
0 -31 V
1.000 UL
LTb
1632 960 M
5024 0 V
0 3696 V
-5024 0 V
0 -3696 V
LTb
320 2808 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 320.0 0.0 true true 0 (function value)]
] -106.7 MCshow
grestore
grestore
LTb
4144 160 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (evaluations)]
] -106.7 MCshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT0
LTb
5186 4433 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (L=10)]
] -106.7 MRshow
grestore
LT0
5378 4433 M
894 0 V
1703 3928 M
564 -510 V
566 -721 V
567 -586 V
567 -403 V
568 -231 V
567 -149 V
568 -240 V
567 -91 V
168 0 V
1703 3928 CircleF
2267 3418 CircleF
2833 2697 CircleF
3400 2111 CircleF
3967 1708 CircleF
4535 1477 CircleF
5102 1328 CircleF
5670 1088 CircleF
6237 997 CircleF
6405 997 CircleF
5825 4433 CircleF
2.000 UP
1.000 UL
LT1
LTb
5186 4113 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (L=20)]
] -106.7 MRshow
grestore
LT1
5378 4113 M
894 0 V
-4569 44 R
564 -262 V
566 -575 V
567 -752 V
567 -630 V
568 -307 V
567 -248 V
568 -209 V
567 -29 V
168 0 V
1703 4157 BoxF
2267 3895 BoxF
2833 3320 BoxF
3400 2568 BoxF
3967 1938 BoxF
4535 1631 BoxF
5102 1383 BoxF
5670 1174 BoxF
6237 1145 BoxF
6405 1145 BoxF
5825 4113 BoxF
2.000 UP
1.000 UL
LT2
LTb
5186 3793 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (L=30)]
] -106.7 MRshow
grestore
LT2
5378 3793 M
894 0 V
1703 4190 M
564 -196 V
566 -419 V
567 -795 V
567 -610 V
568 -347 V
567 -240 V
568 -207 V
567 -281 V
168 -61 V
1703 4190 Box
2267 3994 Box
2833 3575 Box
3400 2780 Box
3967 2170 Box
4535 1823 Box
5102 1583 Box
5670 1376 Box
6237 1095 Box
6405 1034 Box
5825 3793 Box
2.000 UP
1.000 UL
LT3
LTb
5186 3473 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (L=40)]
] -106.7 MRshow
grestore
LT3
5378 3473 M
894 0 V
1703 4222 M
564 -106 V
566 -332 V
567 -710 V
567 -739 V
568 -431 V
567 -345 V
568 -265 V
567 -129 V
168 -48 V
1703 4222 Circle
2267 4116 Circle
2833 3784 Circle
3400 3074 Circle
3967 2335 Circle
4535 1904 Circle
5102 1559 Circle
5670 1294 Circle
6237 1165 Circle
6405 1117 Circle
5825 3473 Circle
2.000 UP
1.000 UL
LT2
LTb
5186 3153 M
gsave 0 setgray
[ [(Helvetica) 320.0 0.0 true true 0 (EDA)]
] -106.7 MRshow
grestore
LT2
5795 1708 Star
6483 1755 Star
6019 1795 Star
5018 1823 Star
6294 1834 Star
5273 1838 Star
6574 1897 Star
4516 1912 Star
4806 1932 Star
5360 1989 Star
5843 2013 Star
3342 2061 Star
3623 2213 Star
6636 2348 Star
4087 2510 Star
5825 3153 Star
2.000 UP
1.000 UL
LT0
5795 1564 M
0 289 V
-31 -289 R
62 0 V
-62 289 R
62 0 V
657 -270 R
0 343 V
-31 -343 R
62 0 V
-62 343 R
62 0 V
6019 1721 M
0 149 V
-31 -149 R
62 0 V
-62 149 R
62 0 V
5018 1709 M
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
6294 1715 M
0 238 V
-31 -238 R
62 0 V
-62 238 R
62 0 V
5273 1763 M
0 149 V
-31 -149 R
62 0 V
-62 149 R
62 0 V
6574 1758 M
0 278 V
-31 -278 R
62 0 V
-62 278 R
62 0 V
4516 1783 M
0 257 V
-31 -257 R
62 0 V
-62 257 R
62 0 V
259 -195 R
0 174 V
-31 -174 R
62 0 V
-62 174 R
62 0 V
523 -190 R
0 320 V
-31 -320 R
62 0 V
-62 320 R
62 0 V
452 -222 R
0 173 V
-31 -173 R
62 0 V
-62 173 R
62 0 V
3342 1964 M
0 195 V
-31 -195 R
62 0 V
-62 195 R
62 0 V
250 -78 R
0 264 V
-31 -264 R
62 0 V
-62 264 R
62 0 V
6636 2230 M
0 236 V
-31 -236 R
62 0 V
-62 236 R
62 0 V
4087 2395 M
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
5795 1708 Pls
6483 1755 Pls
6019 1795 Pls
5018 1823 Pls
6294 1834 Pls
5273 1838 Pls
6574 1897 Pls
4516 1912 Pls
4806 1932 Pls
5360 1989 Pls
5843 2013 Pls
3342 2061 Pls
3623 2213 Pls
6636 2348 Pls
4087 2510 Pls
1.000 UL
LTb
1632 960 M
5024 0 V
0 3696 V
-5024 0 V
0 -3696 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
