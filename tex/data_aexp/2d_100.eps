%!PS-Adobe-2.0 EPSF-2.0
%%Title: 2d_100.eps
%%Creator: gnuplot 4.0 patchlevel 0-0vl1
%%CreationDate: Wed Jan  2 16:55:28 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -93 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 280 scalefont setfont
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 840 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-800)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 1806 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 1806 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-700)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 2772 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 2772 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-600)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 3738 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 3738 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-500)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1428 4704 M
63 0 V
5233 0 R
-63 0 V
stroke
1260 4704 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (-400)]
] -93.3 MRshow
grestore
1.000 UL
LTb
1497 840 M
0 63 V
0 3801 R
0 -63 V
stroke
1497 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (3)]
] -121.3 MCshow
grestore
1.000 UL
LTb
1949 840 M
0 31 V
0 3833 R
0 -31 V
2548 840 M
0 31 V
0 3833 R
0 -31 V
2854 840 M
0 31 V
0 3833 R
0 -31 V
3000 840 M
0 63 V
0 3801 R
0 -63 V
stroke
3000 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (4)]
] -121.3 MCshow
grestore
1.000 UL
LTb
3453 840 M
0 31 V
0 3833 R
0 -31 V
4051 840 M
0 31 V
0 3833 R
0 -31 V
4358 840 M
0 31 V
0 3833 R
0 -31 V
4503 840 M
0 63 V
0 3801 R
0 -63 V
stroke
4503 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (5)]
] -121.3 MCshow
grestore
1.000 UL
LTb
4956 840 M
0 31 V
0 3833 R
0 -31 V
5554 840 M
0 31 V
0 3833 R
0 -31 V
5861 840 M
0 31 V
0 3833 R
0 -31 V
6007 840 M
0 63 V
0 3801 R
0 -63 V
stroke
6007 560 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (10)]
[(Helvetica) 224.0 140.0 true true 0 (6)]
] -121.3 MCshow
grestore
1.000 UL
LTb
6459 840 M
0 31 V
0 3833 R
0 -31 V
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
LTb
280 2772 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 280.0 0.0 true true 0 (function value)]
] -93.3 MCshow
grestore
grestore
LTb
4076 140 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (evaluations)]
] -93.3 MCshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT2
LTb
5422 4501 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (EDA)]
] -93.3 MRshow
grestore
LT2
5590 4501 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
5816 1471 M
0 303 V
-31 -303 R
62 0 V
-62 303 R
62 0 V
206 -138 R
0 155 V
-31 -155 R
62 0 V
-62 155 R
62 0 V
4997 1623 M
0 238 V
-31 -238 R
62 0 V
-62 238 R
62 0 V
238 -181 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
6637 1674 M
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
4469 1701 M
0 268 V
-31 -268 R
62 0 V
-62 268 R
62 0 V
274 -203 R
0 181 V
-31 -181 R
62 0 V
-62 181 R
62 0 V
553 -198 R
0 334 V
-31 -334 R
62 0 V
-62 334 R
62 0 V
478 -232 R
0 180 V
-31 -180 R
62 0 V
-62 180 R
62 0 V
3230 1889 M
0 205 V
-31 -205 R
62 0 V
-62 205 R
62 0 V
266 -82 R
0 276 V
-31 -276 R
62 0 V
-62 276 R
62 0 V
458 52 R
0 241 V
-31 -241 R
62 0 V
-62 241 R
62 0 V
5816 1622 Box
6053 1713 Box
4997 1742 Box
5266 1758 Box
6637 1820 Box
4469 1835 Box
4774 1856 Box
5358 1916 Box
5867 1941 Box
3230 1991 Box
3527 2150 Box
4016 2461 Box
5989 4501 Box
2.000 UP
1.000 UL
LT0
LTb
5422 4221 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (RPM)]
] -93.3 MRshow
grestore
LT0
5590 4221 M
798 0 V
-798 31 R
0 -62 V
798 62 R
0 -62 V
1574 3759 M
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
3328 2037 M
0 234 V
-31 -234 R
62 0 V
-62 234 R
62 0 V
253 -666 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
183 -222 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
48 -295 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
-20 -174 R
0 208 V
-31 -208 R
62 0 V
-62 208 R
62 0 V
-49 -277 R
0 276 V
-31 -276 R
62 0 V
-62 276 R
62 0 V
692 -211 R
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
114 -644 R
0 380 V
-31 -380 R
62 0 V
-62 380 R
62 0 V
235 -322 R
0 268 V
-31 -268 R
62 0 V
-62 268 R
62 0 V
-26 -333 R
0 302 V
-31 -302 R
62 0 V
-62 302 R
62 0 V
-22 -244 R
0 216 V
-31 -216 R
62 0 V
-62 216 R
62 0 V
-28 -99 R
0 219 V
-31 -219 R
62 0 V
-62 219 R
62 0 V
190 -387 R
0 331 V
-31 -331 R
62 0 V
-62 331 R
62 0 V
233 -467 R
0 428 V
-31 -428 R
62 0 V
-62 428 R
62 0 V
-20 -432 R
0 622 V
-31 -622 R
62 0 V
-62 622 R
62 0 V
-6 -471 R
0 254 V
-31 -254 R
62 0 V
stroke
5539 1419 M
62 0 V
-54 -175 R
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
433 -185 R
0 149 V
-31 -149 R
62 0 V
-62 149 R
62 0 V
52 -417 R
0 384 V
6063 961 M
62 0 V
-62 384 R
62 0 V
6112 997 M
0 362 V
6081 997 M
62 0 V
-62 362 R
62 0 V
-25 -317 R
0 245 V
-31 -245 R
62 0 V
-62 245 R
62 0 V
230 -254 R
0 301 V
-31 -301 R
62 0 V
-62 301 R
62 0 V
-9 -275 R
0 416 V
-31 -416 R
62 0 V
-62 416 R
62 0 V
-63 -206 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
206 -333 R
0 285 V
-31 -285 R
62 0 V
-62 285 R
62 0 V
-39 -287 R
0 307 V
-31 -307 R
62 0 V
-62 307 R
62 0 V
73 -326 R
0 350 V
-31 -350 R
62 0 V
-62 350 R
62 0 V
1609 3669 M
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
2600 2302 M
0 341 V
-31 -341 R
62 0 V
-62 341 R
62 0 V
3918 1696 M
0 213 V
-31 -213 R
62 0 V
-62 213 R
62 0 V
2704 2210 M
0 312 V
-31 -312 R
62 0 V
-62 312 R
62 0 V
4001 1455 M
0 188 V
-31 -188 R
62 0 V
-62 188 R
62 0 V
490 -277 R
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
2733 2122 M
0 435 V
stroke
2702 2122 M
62 0 V
-62 435 R
62 0 V
4007 1451 M
0 358 V
-31 -358 R
62 0 V
-62 358 R
62 0 V
535 -409 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
503 -362 R
0 203 V
-31 -203 R
62 0 V
-62 203 R
62 0 V
2699 2358 M
0 241 V
-31 -241 R
62 0 V
-62 241 R
62 0 V
4021 1568 M
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
492 -438 R
0 259 V
-31 -259 R
62 0 V
-62 259 R
62 0 V
514 -303 R
0 269 V
-31 -269 R
62 0 V
-62 269 R
62 0 V
282 -382 R
0 394 V
-31 -394 R
62 0 V
-62 394 R
62 0 V
2699 2370 M
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
4013 1558 M
0 229 V
-31 -229 R
62 0 V
-62 229 R
62 0 V
482 -375 R
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
502 -341 R
0 207 V
-31 -207 R
62 0 V
-62 207 R
62 0 V
286 -252 R
0 254 V
-31 -254 R
62 0 V
-62 254 R
62 0 V
185 -299 R
0 278 V
-31 -278 R
62 0 V
-62 278 R
62 0 V
2750 2177 M
0 375 V
-31 -375 R
62 0 V
-62 375 R
62 0 V
4012 1348 M
0 441 V
-31 -441 R
62 0 V
-62 441 R
62 0 V
505 -437 R
0 340 V
-31 -340 R
62 0 V
-62 340 R
62 0 V
stroke
5042 1261 M
0 344 V
-31 -344 R
62 0 V
-62 344 R
62 0 V
255 -222 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
226 -388 R
0 259 V
-31 -259 R
62 0 V
-62 259 R
62 0 V
156 -355 R
0 335 V
-31 -335 R
62 0 V
-62 335 R
62 0 V
1574 3848 Circle
3328 2154 Circle
3612 1694 Circle
3826 1638 Circle
3905 1545 Circle
3916 1601 Circle
3898 1566 Circle
4621 1646 Circle
4766 1344 Circle
5032 1346 Circle
5037 1298 Circle
5046 1313 Circle
5049 1431 Circle
5270 1319 Circle
5534 1232 Circle
5545 1325 Circle
5570 1292 Circle
5547 1329 Circle
6011 1304 Circle
6094 1153 Circle
6112 1178 Circle
6118 1165 Circle
6379 1184 Circle
6401 1267 Circle
6369 1331 Circle
6606 1201 Circle
6598 1211 Circle
6702 1213 Circle
1609 3781 Circle
2600 2473 Circle
3918 1802 Circle
2704 2366 Circle
4001 1549 Circle
4522 1478 Circle
2733 2339 Circle
4007 1630 Circle
4573 1526 Circle
5107 1391 Circle
2699 2478 Circle
4021 1682 Circle
4544 1487 Circle
5089 1449 Circle
5402 1398 Circle
2699 2523 Circle
4013 1673 Circle
4526 1539 Circle
5059 1429 Circle
5376 1408 Circle
5592 1375 Circle
2750 2364 Circle
4012 1568 Circle
4548 1522 Circle
5042 1433 Circle
5328 1479 Circle
5585 1317 Circle
5772 1259 Circle
5989 4221 Circle
2.000 UP
1.000 UL
LT6
LTb
5422 3941 M
gsave 0 setgray
[ [(Helvetica) 280.0 0.0 true true 0 (HIS L=30 M=10)]
] -93.3 MRshow
grestore
LT6
5590 3941 M
798 0 V
1503 4217 M
595 -205 V
596 -438 V
598 -831 V
598 -638 V
598 -363 V
598 -251 V
598 -216 V
6283 981 L
176 -64 V
1503 4217 CircleF
2098 4012 CircleF
2694 3574 CircleF
3292 2743 CircleF
3890 2105 CircleF
4488 1742 CircleF
5086 1491 CircleF
5684 1275 CircleF
6283 981 CircleF
6459 917 CircleF
5989 3941 CircleF
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
